# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule BungieNetAPI.Model.DestinyDefinitionsDirectorDestinyActivityGraphDefinition do
  @moduledoc """
  Represents a Map View in the director: be them overview views, destination views, or other.  They have nodes which map to activities, and other various visual elements that we (or others) may or may not be able to use.  Activity graphs, most importantly, have nodes which can have activities in various states of playability.  Unfortunately, activity graphs are combined at runtime with Game UI-only assets such as fragments of map images, various in-game special effects, decals etc... that we don&#39;t get in these definitions.  If we end up having time, we may end up trying to manually populate those here: but the last time we tried that, before the lead-up to D1, it proved to be unmaintainable as the game&#39;s content changed. So don&#39;t bet the farm on us providing that content in this definition.
  """

  @derive [Poison.Encoder]
  defstruct [
    :"nodes",
    :"artElements",
    :"connections",
    :"displayObjectives",
    :"displayProgressions",
    :"linkedGraphs",
    :"hash",
    :"index",
    :"redacted"
  ]

  @type t :: %__MODULE__{
    :"nodes" => [DestinyDefinitionsDirectorDestinyActivityGraphNodeDefinition],
    :"artElements" => [DestinyDefinitionsDirectorDestinyActivityGraphArtElementDefinition],
    :"connections" => [DestinyDefinitionsDirectorDestinyActivityGraphConnectionDefinition],
    :"displayObjectives" => [DestinyDefinitionsDirectorDestinyActivityGraphDisplayObjectiveDefinition],
    :"displayProgressions" => [DestinyDefinitionsDirectorDestinyActivityGraphDisplayProgressionDefinition],
    :"linkedGraphs" => [DestinyDefinitionsDirectorDestinyLinkedGraphDefinition],
    :"hash" => integer(),
    :"index" => integer(),
    :"redacted" => boolean()
  }
end

defimpl Poison.Decoder, for: BungieNetAPI.Model.DestinyDefinitionsDirectorDestinyActivityGraphDefinition do
  import BungieNetAPI.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"nodes", :list, BungieNetAPI.Model.DestinyDefinitionsDirectorDestinyActivityGraphNodeDefinition, options)
    |> deserialize(:"artElements", :list, BungieNetAPI.Model.DestinyDefinitionsDirectorDestinyActivityGraphArtElementDefinition, options)
    |> deserialize(:"connections", :list, BungieNetAPI.Model.DestinyDefinitionsDirectorDestinyActivityGraphConnectionDefinition, options)
    |> deserialize(:"displayObjectives", :list, BungieNetAPI.Model.DestinyDefinitionsDirectorDestinyActivityGraphDisplayObjectiveDefinition, options)
    |> deserialize(:"displayProgressions", :list, BungieNetAPI.Model.DestinyDefinitionsDirectorDestinyActivityGraphDisplayProgressionDefinition, options)
    |> deserialize(:"linkedGraphs", :list, BungieNetAPI.Model.DestinyDefinitionsDirectorDestinyLinkedGraphDefinition, options)
  end
end

