# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule BungieNetAPI.Model.DestinyDefinitionsDestinyActivityDefinition do
  @moduledoc """
  The static data about Activities in Destiny 2.  Note that an Activity must be combined with an ActivityMode to know - from a Gameplay perspective - what the user is \&quot;Playing\&quot;.  In most PvE activities, this is fairly straightforward. A Story Activity can only be played in the Story Activity Mode.  However, in PvP activities, the Activity alone only tells you the map being played, or the Playlist that the user chose to enter. You&#39;ll need to know the Activity Mode they&#39;re playing to know that they&#39;re playing Mode X on Map Y.  Activity Definitions tell a great deal of information about what *could* be relevant to a user: what rewards they can earn, what challenges could be performed, what modifiers could be applied. To figure out which of these properties is actually live, you&#39;ll need to combine the definition with \&quot;Live\&quot; data from one of the Destiny endpoints.  Activities also have Activity Types, but unfortunately in Destiny 2 these are even less reliable of a source of information than they were in Destiny 1. I will be looking into ways to provide more reliable sources for type information as time goes on, but for now we&#39;re going to have to deal with the limitations. See DestinyActivityTypeDefinition for more information.
  """

  @derive [Poison.Encoder]
  defstruct [
    :"displayProperties",
    :"releaseIcon",
    :"releaseTime",
    :"activityLevel",
    :"activityLightLevel",
    :"destinationHash",
    :"placeHash",
    :"activityTypeHash",
    :"tier",
    :"pgcrImage",
    :"rewards",
    :"modifiers",
    :"isPlaylist",
    :"challenges",
    :"optionalUnlockStrings",
    :"playlistItems",
    :"activityGraphList",
    :"matchmaking",
    :"guidedGame",
    :"directActivityModeHash",
    :"directActivityModeType",
    :"activityModeHashes",
    :"activityModeTypes",
    :"isPvP",
    :"hash",
    :"index",
    :"redacted"
  ]

  @type t :: %__MODULE__{
    :"displayProperties" => Object,
    :"releaseIcon" => String.t,
    :"releaseTime" => integer(),
    :"activityLevel" => integer(),
    :"activityLightLevel" => integer(),
    :"destinationHash" => integer(),
    :"placeHash" => integer(),
    :"activityTypeHash" => integer(),
    :"tier" => integer(),
    :"pgcrImage" => String.t,
    :"rewards" => [DestinyDefinitionsDestinyActivityRewardDefinition],
    :"modifiers" => [DestinyDefinitionsDestinyActivityModifierReferenceDefinition],
    :"isPlaylist" => boolean(),
    :"challenges" => [DestinyDefinitionsDestinyActivityChallengeDefinition],
    :"optionalUnlockStrings" => [DestinyDefinitionsDestinyActivityUnlockStringDefinition],
    :"playlistItems" => [DestinyDefinitionsDestinyActivityPlaylistItemDefinition],
    :"activityGraphList" => [DestinyDefinitionsDestinyActivityGraphListEntryDefinition],
    :"matchmaking" => Object,
    :"guidedGame" => Object,
    :"directActivityModeHash" => integer(),
    :"directActivityModeType" => integer(),
    :"activityModeHashes" => [integer()],
    :"activityModeTypes" => [DestinyHistoricalStatsDefinitionsDestinyActivityModeType],
    :"isPvP" => boolean(),
    :"hash" => integer(),
    :"index" => integer(),
    :"redacted" => boolean()
  }
end

defimpl Poison.Decoder, for: BungieNetAPI.Model.DestinyDefinitionsDestinyActivityDefinition do
  import BungieNetAPI.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"displayProperties", :struct, BungieNetAPI.Model.Object, options)
    |> deserialize(:"rewards", :list, BungieNetAPI.Model.DestinyDefinitionsDestinyActivityRewardDefinition, options)
    |> deserialize(:"modifiers", :list, BungieNetAPI.Model.DestinyDefinitionsDestinyActivityModifierReferenceDefinition, options)
    |> deserialize(:"challenges", :list, BungieNetAPI.Model.DestinyDefinitionsDestinyActivityChallengeDefinition, options)
    |> deserialize(:"optionalUnlockStrings", :list, BungieNetAPI.Model.DestinyDefinitionsDestinyActivityUnlockStringDefinition, options)
    |> deserialize(:"playlistItems", :list, BungieNetAPI.Model.DestinyDefinitionsDestinyActivityPlaylistItemDefinition, options)
    |> deserialize(:"activityGraphList", :list, BungieNetAPI.Model.DestinyDefinitionsDestinyActivityGraphListEntryDefinition, options)
    |> deserialize(:"matchmaking", :struct, BungieNetAPI.Model.Object, options)
    |> deserialize(:"guidedGame", :struct, BungieNetAPI.Model.Object, options)
    |> deserialize(:"activityModeTypes", :list, BungieNetAPI.Model.DestinyHistoricalStatsDefinitionsDestinyActivityModeType, options)
  end
end

