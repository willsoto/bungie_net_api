# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule BungieNetAPI.Model.DestinyDefinitionsDestinySandboxPerkDefinition do
  @moduledoc """
  Perks are modifiers to a character or item that can be applied situationally.  - Perks determine a weapons&#39; damage type.  - Perks put the Mods in Modifiers (they are literally the entity that bestows the Sandbox benefit for whatever fluff text about the modifier in the Socket, Plug or Talent Node)  - Perks are applied for unique alterations of state in Objectives  Anyways, I&#39;m sure you can see why perks are so interesting.  What Perks often don&#39;t have is human readable information, so we attempt to reverse engineer that by pulling that data from places that uniquely refer to these perks: namely, Talent Nodes and Plugs. That only gives us a subset of perks that are human readable, but those perks are the ones people generally care about anyways. The others are left as a mystery, their true purpose mostly unknown and undocumented.
  """

  @derive [Poison.Encoder]
  defstruct [
    :"displayProperties",
    :"perkIdentifier",
    :"isDisplayable",
    :"damageType",
    :"damageTypeHash",
    :"perkGroups",
    :"hash",
    :"index",
    :"redacted"
  ]

  @type t :: %__MODULE__{
    :"displayProperties" => Object,
    :"perkIdentifier" => String.t,
    :"isDisplayable" => boolean(),
    :"damageType" => Object,
    :"damageTypeHash" => integer(),
    :"perkGroups" => Object,
    :"hash" => integer(),
    :"index" => integer(),
    :"redacted" => boolean()
  }
end

defimpl Poison.Decoder, for: BungieNetAPI.Model.DestinyDefinitionsDestinySandboxPerkDefinition do
  import BungieNetAPI.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"displayProperties", :struct, BungieNetAPI.Model.Object, options)
    |> deserialize(:"damageType", :struct, BungieNetAPI.Model.Object, options)
    |> deserialize(:"perkGroups", :struct, BungieNetAPI.Model.Object, options)
  end
end

