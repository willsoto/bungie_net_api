# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule BungieNetAPI.Model.DestinyDefinitionsDestinyProgressionDefinition do
  @moduledoc """
  A \&quot;Progression\&quot; in Destiny is best explained by an example.  A Character&#39;s \&quot;Level\&quot; is a progression: it has Experience that can be earned, levels that can be gained, and is evaluated and displayed at various points in the game. A Character&#39;s \&quot;Faction Reputation\&quot; is also a progression for much the same reason.  Progression is used by a variety of systems, and the definition of a Progression will generally only be useful if combining with live data (such as a character&#39;s DestinyCharacterProgressionComponent.progressions property, which holds that character&#39;s live Progression states).  Fundamentally, a Progression measures your \&quot;Level\&quot; by evaluating the thresholds in its Steps (one step per level, except for the last step which can be repeated indefinitely for \&quot;Levels\&quot; that have no ceiling) against the total earned \&quot;progression points\&quot;/experience. (for simplicity purposes, we will henceforth refer to earned progression points as experience, though it need not be a mechanic that in any way resembles Experience in a traditional sense).  Earned experience is calculated in a variety of ways, determined by the Progression&#39;s scope. These go from looking up a stored value to performing exceedingly obtuse calculations. This is why we provide live data in DestinyCharacterProgressionComponent.progressions, so you don&#39;t have to worry about those.
  """

  @derive [Poison.Encoder]
  defstruct [
    :"displayProperties",
    :"scope",
    :"repeatLastStep",
    :"source",
    :"steps",
    :"visible",
    :"factionHash",
    :"hash",
    :"index",
    :"redacted"
  ]

  @type t :: %__MODULE__{
    :"displayProperties" => DestinyDefinitionsDestinyProgressionDisplayPropertiesDefinition,
    :"scope" => Object,
    :"repeatLastStep" => boolean(),
    :"source" => String.t,
    :"steps" => [DestinyDefinitionsDestinyProgressionStepDefinition],
    :"visible" => boolean(),
    :"factionHash" => integer(),
    :"hash" => integer(),
    :"index" => integer(),
    :"redacted" => boolean()
  }
end

defimpl Poison.Decoder, for: BungieNetAPI.Model.DestinyDefinitionsDestinyProgressionDefinition do
  import BungieNetAPI.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"displayProperties", :struct, BungieNetAPI.Model.DestinyDefinitionsDestinyProgressionDisplayPropertiesDefinition, options)
    |> deserialize(:"scope", :struct, BungieNetAPI.Model.Object, options)
    |> deserialize(:"steps", :list, BungieNetAPI.Model.DestinyDefinitionsDestinyProgressionStepDefinition, options)
  end
end

