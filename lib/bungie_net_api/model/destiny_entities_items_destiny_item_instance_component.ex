# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule BungieNetAPI.Model.DestinyEntitiesItemsDestinyItemInstanceComponent do
  @moduledoc """
  If an item is \&quot;instanced\&quot;, this will contain information about the item&#39;s instance that doesn&#39;t fit easily into other components. One might say this is the \&quot;essential\&quot; instance data for the item.  Items are instanced if they require information or state that can vary. For instance, weapons are Instanced: they are given a unique identifier, uniquely generated stats, and can have their properties altered. Non-instanced items have none of these things: for instance, Glimmer has no unique properties aside from how much of it you own.  You can tell from an item&#39;s definition whether it will be instanced or not by looking at the DestinyInventoryItemDefinition&#39;s definition.inventory.isInstanceItem property.
  """

  @derive [Poison.Encoder]
  defstruct [
    :"damageType",
    :"damageTypeHash",
    :"primaryStat",
    :"itemLevel",
    :"quality",
    :"isEquipped",
    :"canEquip",
    :"equipRequiredLevel",
    :"unlockHashesRequiredToEquip",
    :"cannotEquipReason"
  ]

  @type t :: %__MODULE__{
    :"damageType" => Object,
    :"damageTypeHash" => integer(),
    :"primaryStat" => Object,
    :"itemLevel" => integer(),
    :"quality" => integer(),
    :"isEquipped" => boolean(),
    :"canEquip" => boolean(),
    :"equipRequiredLevel" => integer(),
    :"unlockHashesRequiredToEquip" => [integer()],
    :"cannotEquipReason" => Object
  }
end

defimpl Poison.Decoder, for: BungieNetAPI.Model.DestinyEntitiesItemsDestinyItemInstanceComponent do
  import BungieNetAPI.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"damageType", :struct, BungieNetAPI.Model.Object, options)
    |> deserialize(:"primaryStat", :struct, BungieNetAPI.Model.Object, options)
    |> deserialize(:"cannotEquipReason", :struct, BungieNetAPI.Model.Object, options)
  end
end

