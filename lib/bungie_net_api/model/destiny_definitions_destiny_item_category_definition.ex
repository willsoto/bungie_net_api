# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule BungieNetAPI.Model.DestinyDefinitionsDestinyItemCategoryDefinition do
  @moduledoc """
  In an attempt to categorize items by type, usage, and other interesting properties, we created DestinyItemCategoryDefinition: information about types that is assembled using a set of heuristics that examine the properties of an item such as what inventory bucket it&#39;s in, its item type name, and whether it has or is missing certain blocks of data.  This heuristic is imperfect, however. If you find an item miscategorized, let us know on the Bungie API forums!  We then populate all of the categories that we think an item belongs to in its DestinyInventoryItemDefinition.itemCategoryHashes property. You can use that to provide your own custom item filtering, sorting, aggregating... go nuts on it! And let us know if you see more categories that you wish would be added!
  """

  @derive [Poison.Encoder]
  defstruct [
    :"displayProperties",
    :"visible",
    :"shortTitle",
    :"itemTypeRegex",
    :"itemTypeRegexNot",
    :"originBucketIdentifier",
    :"grantDestinyItemType",
    :"grantDestinySubType",
    :"grantDestinyClass",
    :"groupedCategoryHashes",
    :"parentCategoryHashes",
    :"groupCategoryOnly",
    :"hash",
    :"index",
    :"redacted"
  ]

  @type t :: %__MODULE__{
    :"displayProperties" => DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition,
    :"visible" => boolean(),
    :"shortTitle" => String.t,
    :"itemTypeRegex" => String.t,
    :"itemTypeRegexNot" => String.t,
    :"originBucketIdentifier" => String.t,
    :"grantDestinyItemType" => Object,
    :"grantDestinySubType" => Object,
    :"grantDestinyClass" => Object,
    :"groupedCategoryHashes" => [integer()],
    :"parentCategoryHashes" => [integer()],
    :"groupCategoryOnly" => boolean(),
    :"hash" => integer(),
    :"index" => integer(),
    :"redacted" => boolean()
  }
end

defimpl Poison.Decoder, for: BungieNetAPI.Model.DestinyDefinitionsDestinyItemCategoryDefinition do
  import BungieNetAPI.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"displayProperties", :struct, BungieNetAPI.Model.DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition, options)
    |> deserialize(:"grantDestinyItemType", :struct, BungieNetAPI.Model.Object, options)
    |> deserialize(:"grantDestinySubType", :struct, BungieNetAPI.Model.Object, options)
    |> deserialize(:"grantDestinyClass", :struct, BungieNetAPI.Model.Object, options)
  end
end

